@page "/counter"
@rendermode InteractiveServer
@inject IDataService data
@inject NavigationManager navigate
@attribute [Authorize]

<PageTitle>Активные заявки</PageTitle>

<h1>Активные заявки на клининг</h1>

@if (requests == null)
{
    <tr>
        <td colspan="5">Loading...</td>
    </tr>
}
else
{
    @foreach (var request in requests)
    {
        <div class="p-3 mb-3 border rounded">
            <p><strong>ФИО:</strong> @request.FullName</p>
            <p><strong>Телефон:</strong> @request.PhoneNumber</p>
            <p><strong>Офис:</strong> @request.OfficeAddress</p>
            <p><strong>Кабинет:</strong> @request.Room</p>
            <strong>Список услуг:</strong>
                        @if (request.WindowWashing)
                        {
                            <p>• Мойка окон</p>
                        }
                        @if (request.WetСleaning)
                        {
                            <p>• Влажная уборка</p>
                        }
                        @if (request.CarpetСleaning)
                        {
                            <p>• Чистка ковров</p>
                        }
                        @if (request.Disinfection)
                        {
                            <p>• Дезинфекция</p>
                        }
                        @if (request.GarbageRemoval)
                        {
                            <p>• Вынос мусора</p>
                        }
                        @if (request.OfficeEquipmentCleaning)
                        {
                            <p>• Очистка офисной техники</p>
                        }
            <p><strong>Дата и время:</strong> @request.RequestedDateTime?.ToString("g")</p>
            <p><strong>Комментарий:</strong> @request.Comment</p>
            <p><strong>Создано:</strong> @request.CreatedDate.ToString("g")</p>
            <strong>Статус заявки:</strong>
            @if (request.InProgress)
            {
                <p>В работе</p>
            }
            @if (request.IsCompleted)
            {
                <p>Завершено</p>
            }

            <button class="btn btn-success" @onclick="() => MarkCompleted(request.Id)">Завершить</button>
        </div>
    }
}

@code {
    IEnumerable<RequestItem>? requests;

    protected override async Task OnParametersSetAsync()
    {
        await base.OnInitializedAsync();
        requests = (await data.GetAllAsync())
            .Where(x => x.InProgress && !x.IsCompleted);
    }

    void AddRequest()
    {
        navigate.NavigateTo("requests/add");
    }

    async Task DeleteRequest(int id)
    {
        await data.DeleteAsync(id);
        requests = await data.GetAllAsync();
    }

    async Task MarkCompleted(int id)
    {
        var item = await data.GetRequestAsync(id);
        if (item != null)
        {
            item.InProgress = false;
            item.IsCompleted = true;
            await data.SaveAsync(item);
            requests = (await data.GetAllAsync())
                .Where(x => x.InProgress && !x.IsCompleted);
        }
    }
}
