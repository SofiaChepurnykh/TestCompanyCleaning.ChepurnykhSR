@page "/"
@rendermode InteractiveServer
@inject IDataService data
@inject NavigationManager navigate
@inject IJSRuntime JSRuntime
@attribute [Authorize]

<PageTitle>Создание заявки</PageTitle>

<h1>Создание заявки на клининг</h1>

<div class="container">
    @if (requests == null)
    {
        <tr>
            <td colspan="5">Loading ...</td>
        </tr>
    }
    else
    {
        <div class="btn-group m-2">
            <button class="btn btn-primary" @onclick="AddRequest">Новая заявка</button>
        </div>
        <div class="card-group">
            @foreach (var request in requests)
            {
                <div class="card">
                    <div class="card-header">
                        @request.FullName
                    </div>
                    <div class="card-body">
                        <p>@request.PhoneNumber</p>
                        <p>@request.OfficeAddress</p>
                        <p>@request.Room</p>@* 
                        <strong>Список услуг:</strong> *@
                        @if (request.WindowWashing)
                        {
                            <p> Мойка окон</p>
                        }
                        @if (request.WetСleaning)
                        {
                            <p> Влажная уборка</p>
                        }
                        @if (request.CarpetСleaning)
                        {
                            <p> Чистка ковров</p>
                        }
                        @if (request.Disinfection)
                        {
                            <p> Дезинфекция</p>
                        }
                        @if (request.GarbageRemoval)
                        {
                            <p> Вынос мусора</p>
                        }
                        @if (request.OfficeEquipmentCleaning)
                        {
                            <p> Очистка офисной техники</p>
                        }
                        <p>@request.RequestedDateTime?.ToString("g")</p>
                        <p>@request.Comment</p>
                        <p>@request.CreatedDate.ToString("g")</p>
                    </div>
                    <div class="card-footer">
                        <a class="btn btn-primary" href="request/@request.Id">Изменить</a>
                        <button class="btn btn-primary" @onclick="async () => await ConfirmDelete(request.Id)">Удалить</button>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    IEnumerable<RequestItem>? requests;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        requests = await data.GetAllAsync();
    }

    void AddRequest()
    {
        navigate.NavigateTo("request/add");
    }

    async Task ConfirmDelete(int id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", $"Вы действительно хотите удалить заявку?"))
        {
            await ExecuteDelete(id);
        }
    }

    private async Task ExecuteDelete(int id)
    {
        await data.DeleteAsync(id);
        requests = await data.GetAllAsync();
    }
}