@page "/"
@rendermode InteractiveServer
@inject IDataService data
@inject NavigationManager navigate
@inject IJSRuntime JSRuntime
@attribute [Authorize]

<PageTitle>Создание заявки</PageTitle>

<PageTitle>Создание заявки</PageTitle>

<h1>Создание заявки на клининг</h1>

<div class="btn-group m-2">
    <button class="btn btn-primary" @onclick="AddRequest">Новая заявка</button>
</div>

<h1>Изменение заявки</h1>

<div class="container">
    @if (requests == null)
    {
        <tr>
            <td colspan="5">Loading ...</td>
        </tr>
    }
    else
    {
        @foreach (var request in requests)
        {
            <div class="p-3 mb-3 border rounded">
                <p><strong>ФИО:</strong> @request.FullName</p>
                <p><strong>Телефон:</strong> @request.PhoneNumber</p>
                <p><strong>Офис:</strong> @request.OfficeAddress</p>
                <p><strong>Кабинет:</strong> @request.Room</p>
                <strong>Список услуг:</strong>
                @if (request.WindowWashing)
                {
                    <p>• Мойка окон</p>
                }
                @if (request.WetСleaning)
                {
                    <p>• Влажная уборка</p>
                }
                @if (request.CarpetСleaning)
                {
                    <p>• Чистка ковров</p>
                }
                @if (request.Disinfection)
                {
                    <p>• Дезинфекция</p>
                }
                @if (request.GarbageRemoval)
                {
                    <p>• Вынос мусора</p>
                }
                @if (request.OfficeEquipmentCleaning)
                {
                    <p>• Очистка офисной техники</p>
                }
                <p><strong>Дата и время:</strong> @request.RequestedDateTime?.ToString("g")</p>
                <p><strong>Комментарий:</strong> @request.Comment</p>
                <p><strong>Создано:</strong> @request.CreatedDate.ToString("g")</p>
                <strong>Статус заявки:</strong> 
                @if (request.InProgress)
                {
                    <p>В работе</p>
                }
                @if (request.IsCompleted)
                {
                    <p>Завершено</p>
                }

                <a class="btn btn-primary" href="request/@request.Id">Изменить</a>
                <button class="btn btn-primary" @onclick="async () => await ConfirmDelete(request.Id)">Удалить</button>
            </div>
        }

    }
</div>

@code {
    IEnumerable<RequestItem>? requests;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        requests = (await data.GetAllAsync())
            .Where(r => r.InProgress && !r.IsCompleted)
            .ToList();
    }

    void AddRequest()
    {
        navigate.NavigateTo("request/add");
    }

    async Task ConfirmDelete(int id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", $"Вы действительно хотите удалить заявку?"))
        {
            await ExecuteDelete(id);
        }
    }

    private async Task ExecuteDelete(int id)
    {
        await data.DeleteAsync(id);
        requests = await data.GetAllAsync();
    }
}